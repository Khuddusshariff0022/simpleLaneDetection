import matplotlib.pylab as plt
import  cv2
import numpy as np

def region_of_interest(img, vertices):
    mask=np.zeros_like(img)
    #channel_count =img.shape[2]
    match_mask_color=255
    cv2.fillPoly(mask, vertices, match_mask_color)
    masked_image=cv2.bitwise_and(img, mask)
    return masked_image

def drow_the_line(image, lines):
    image=np.copy(image)
    line_image= np.zeros((image.shape[0],image.shape[1],3),dtype=np.uint8)
    if lines is None:
        print()
    else:
        for line in lines:
            for x1, y1, x2, y2 in line:
                cv2.line(line_image, (x1,y1),(x2,y2), (0,0,255), thickness=10)

    image= cv2.addWeighted(image,0.8, line_image,1,0.0)
    return image


image=cv2.imread('challengepic.png')
image=cv2.cvtColor(image,cv2.COLOR_BGR2RGB)


print(image.shape)
hight=image.shape[0]
width=image.shape[1]

#reagion of interset
'''region_of_interest_vertices=[(250,hight),
        (width/2, hight*0.7),
        (1600,hight)
'''
imshape = image.shape
region_of_interest_vertices = np.array([[(-100, imshape[0]),
                                             (850, 650),
                                            (1100, 650),
                                            (1850, 1070)]],
                                       dtype=np.int32)

grar_image = cv2.cvtColor(image,cv2.COLOR_RGB2GRAY)
canny_image= cv2.Canny(grar_image, 100, 200)

cropped_image = region_of_interest(grar_image,
                np.array([region_of_interest_vertices],np.int32))
lines=cv2.HoughLinesP(cropped_image,
                      rho=6,
                      theta=np.pi/60,
                      threshold=160,
                      lines=np.array([]),
                      minLineLength=40,
                      maxLineGap=25)


image_with_line = drow_the_line(image, lines)
plt.imshow(cropped_image)
plt.show()

